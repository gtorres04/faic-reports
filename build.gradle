plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'java'
    id "com.diffplug.spotless" version '5.16.0'
    id 'jacoco'
    id 'info.solidsoft.pitest' version '1.7.0'
}

group = 'com.gtorresoft.faic'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo1.maven.org/maven2/" }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'com.google.api-client:google-api-client:1.33.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.32.1'
    implementation 'com.google.apis:google-api-services-sheets:v4-rev20210629-1.32.1'
    implementation 'org.mapstruct:mapstruct:1.5.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'
    implementation 'com.itextpdf:itext7-core:7.2.3'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.9.0'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.9.0'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.6.1'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '4.6.1'
    testImplementation 'org.assertj:assertj-core:3.23.1'
    testImplementation 'org.hamcrest:hamcrest-library'
    testImplementation 'org.jeasy:easy-random-core:5.0.0'
    testImplementation 'io.github.glytching:junit-extensions:2.5.0'
    testImplementation 'io.github.benas:random-beans:3.9.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Spotless Configuration: https://github.com/diffplug/spotless/blob/main/plugin-gradle/README.md#java
spotless {
    // optional: limit format enforcement to just the files changed by this feature branch
    // ratchetFrom 'origin/main'

    format 'misc', {
        // define the files to apply `misc` to
        target '*.gradle', '*.md', '.gitignore'

        // define the steps to apply to those files
        trimTrailingWhitespace()
        indentWithSpaces(2) // or spaces. Takes an integer argument if you don't like 4
        endWithNewline()
        setEncoding('utf-8')
    }
    java {
        // Google Java Format - https://github.com/diffplug/spotless/blob/main/plugin-gradle/README.md#google-java-format
        googleJavaFormat()
    }
}

/************** QUALITY *************************/

// JaCoCo Guia https://reflectoring.io/jacoco/
jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.90
            }
        }
    }
}

// Mutation Test configuration
pitest {
    junit5PluginVersion = '0.15'
    targetClasses = ['com.gtorresoft.*']
    threads = 4
    outputFormats = ['HTML']
    timestampedReports = false
    mutators = ['DEFAULTS']
    mutationThreshold = 90
    coverageThreshold = 90
}

// Add script pre-commit to .git/hooks
task installLocalGitHook(type: Copy) {
    from new File(rootProject.rootDir, 'scripts/git/pre-commit')
    into { new File(rootProject.rootDir, '.git/hooks') }
    fileMode 0775
}

compileJava.dependsOn(installLocalGitHook, spotlessApply)
